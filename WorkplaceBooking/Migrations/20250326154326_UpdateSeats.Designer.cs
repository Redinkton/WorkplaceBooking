// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WorkplaceBooking.Data;

#nullable disable

namespace WorkplaceBooking.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250326154326_UpdateSeats")]
    partial class UpdateSeats
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("WorkplaceBooking.Models.Seat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Seats");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Number = 1
                        },
                        new
                        {
                            Id = 2,
                            Number = 2
                        },
                        new
                        {
                            Id = 3,
                            Number = 3
                        },
                        new
                        {
                            Id = 4,
                            Number = 4
                        },
                        new
                        {
                            Id = 5,
                            Number = 5
                        },
                        new
                        {
                            Id = 6,
                            Number = 6
                        },
                        new
                        {
                            Id = 7,
                            Number = 7
                        },
                        new
                        {
                            Id = 8,
                            Number = 8
                        },
                        new
                        {
                            Id = 9,
                            Number = 9
                        },
                        new
                        {
                            Id = 10,
                            Number = 10
                        },
                        new
                        {
                            Id = 11,
                            Number = 11
                        },
                        new
                        {
                            Id = 12,
                            Number = 12
                        },
                        new
                        {
                            Id = 13,
                            Number = 13
                        },
                        new
                        {
                            Id = 14,
                            Number = 14
                        },
                        new
                        {
                            Id = 15,
                            Number = 15
                        },
                        new
                        {
                            Id = 16,
                            Number = 16
                        },
                        new
                        {
                            Id = 17,
                            Number = 17
                        },
                        new
                        {
                            Id = 18,
                            Number = 18
                        },
                        new
                        {
                            Id = 19,
                            Number = 19
                        },
                        new
                        {
                            Id = 20,
                            Number = 20
                        },
                        new
                        {
                            Id = 21,
                            Number = 21
                        },
                        new
                        {
                            Id = 22,
                            Number = 22
                        },
                        new
                        {
                            Id = 23,
                            Number = 23
                        },
                        new
                        {
                            Id = 24,
                            Number = 24
                        },
                        new
                        {
                            Id = 25,
                            Number = 25
                        },
                        new
                        {
                            Id = 26,
                            Number = 26
                        },
                        new
                        {
                            Id = 27,
                            Number = 27
                        },
                        new
                        {
                            Id = 28,
                            Number = 28
                        },
                        new
                        {
                            Id = 29,
                            Number = 29
                        },
                        new
                        {
                            Id = 30,
                            Number = 30
                        },
                        new
                        {
                            Id = 31,
                            Number = 31
                        });
                });

            modelBuilder.Entity("WorkplaceBooking.Models.UserProfile", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("SeatId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("SeatId")
                        .IsUnique();

                    b.ToTable("UserProfiles");
                });

            modelBuilder.Entity("WorkplaceBooking.Models.UserProfile", b =>
                {
                    b.HasOne("WorkplaceBooking.Models.Seat", "Seat")
                        .WithOne("UserProfile")
                        .HasForeignKey("WorkplaceBooking.Models.UserProfile", "SeatId");

                    b.Navigation("Seat");
                });

            modelBuilder.Entity("WorkplaceBooking.Models.Seat", b =>
                {
                    b.Navigation("UserProfile");
                });
#pragma warning restore 612, 618
        }
    }
}
